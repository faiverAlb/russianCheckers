<Window x:Class="RussianCheckers.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RussianCheckers"
        xmlns:game="clr-namespace:RussianCheckers.Game"
        xmlns:core="clr-namespace:RussianCheckers.Core;assembly=RussianCheckers.Core"
        mc:Ignorable="d"
        
        Title="Russian checkers" Height="700" Width="650" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
        <Window.Resources>

        <Style x:Key="ChessPieceStyle" TargetType="{x:Type Image}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Type}" Value="{x:Static core:PieceType.Queen}"/>
                        <Condition Binding="{Binding Side}" Value="{x:Static core:Side.Black}"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Image.Source" Value="Images/black_queen.png" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Type}" Value="{x:Static core:PieceType.Queen}"/>
                        <Condition Binding="{Binding Side}" Value="{x:Static core:Side.White}"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Image.Source" Value="Images/white_queen.png" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Type}" Value="{x:Static core:PieceType.Checker}"/>
                        <Condition Binding="{Binding Side}" Value="{x:Static core:Side.Black}"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Image.Source" Value="Images/blackCheker.png" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Type}" Value="{x:Static core:PieceType.Checker}"/>
                        <Condition Binding="{Binding Side}" Value="{x:Static core:Side.White}"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Image.Source" Value="Images/whiteChecker.png" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Side}" Value="{x:Static core:Side.Empty}"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Image.Source" Value="Images/empty.png" />
                    </MultiDataTrigger.Setters>

                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ClearedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                                BorderThickness="0"
                                BorderBrush="AntiqueWhite" 
                                CornerRadius="100" 
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderThickness" Value="0" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderThickness" Value="2" />
                            </Trigger>
                            <MultiDataTrigger >
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected}" Value="True"/>
                                    <Condition Binding="{Binding SelfAsPossible}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="border" Property="BorderBrush" Value="Yellow" />
                                <Setter TargetName="border" Property="BorderThickness" Value="2" />
                                <Setter TargetName="border" Property="Opacity" Value="0.9" />
                            </MultiDataTrigger>
                            <MultiDataTrigger >
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected}" Value="True"/>
                                    <Condition Binding="{Binding SelfAsPossible}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="border" Property="BorderBrush" Value="Aquamarine" />
                                <Setter TargetName="border" Property="BorderThickness" Value="2" />
                                <Setter TargetName="border" Property="Opacity" Value="0.9" />
                            </MultiDataTrigger>

                            <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected}" Value="True"/>
                                    <Condition Binding="{Binding Side}" Value="{x:Static core:Side.Empty}"/>
                                    </MultiDataTrigger.Conditions>
                                <Setter TargetName="border" Property="BorderBrush" Value="Aquamarine" />
                                <Setter TargetName="border" Property="BorderThickness" Value="2" />
                                <Setter TargetName="border" Property="Opacity" Value="0.9" />
                            </MultiDataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition ></RowDefinition>
            <RowDefinition ></RowDefinition>
            <RowDefinition Height="480"></RowDefinition>
            <RowDefinition ></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="480"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Row="0" Grid.Column="1" FontSize="20" >
            Next move:
            <TextBlock Text="{Binding NextMoveSide}"></TextBlock>
        </TextBlock>
        <TextBlock Grid.Row="1" Grid.Column="1" FontSize="20">
            Calculating...
        </TextBlock>
        <ItemsControl Grid.Row="2" Grid.Column="1" x:Name="ChessBoard" ItemsSource="{Binding Positions}" >
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas>
                        <Canvas.Background>
                            <ImageBrush ImageSource="Images/gameTableImage.png"></ImageBrush>
                        </Canvas.Background>
                    </Canvas>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Button Command="{Binding ElementName=ChessBoard,  Path=DataContext.SelectCheckerCommand}"
                                CommandParameter="{Binding}"
                                Style="{StaticResource ClearedButtonStyle}"
                                >

                            <Image Width="50" Height="50" Style="{StaticResource ChessPieceStyle}"  >
                
                        </Image>
                        </Button>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Canvas.Left" Value="{Binding Pos.X}" />
                    <Setter Property="Canvas.Top" Value="{Binding Pos.Y}" />
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </Grid>
</Window>
